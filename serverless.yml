service: my-service

provider:
  name: aws
  runtime: python3.9
  region: us-west-2
  stage: dev

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
          Resource:
            - arn:aws:dynamodb:us-west-2:982081078723:table/landingnewsletter
        - Effect: Allow
          Action:
            - dynamodb:PutItem
          Resource:
            - arn:aws:dynamodb:us-west-2:982081078723:table/Register_Data
        - Effect: Allow
          Action:
            - ses:SendEmail
            - ses:SendRawEmail
          Resource: "*"

functions:
  subscribe_user:
    handler: handler.subscribe_user
    memorySize: 1024
    timeout: 30
    events:
      - http:
          path: subscribe
          method: post
          cors:
            origin: '*'  # Allow requests from any origin
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

  register_user:
    handler: handler.register_user
    memorySize: 1024
    timeout: 30
    events:
      - http:
          path: register
          method: post
          cors:
            origin: '*'   # Allow requests from any origin
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

plugins:
  - serverless-python-requirements
  - serverless-offline
