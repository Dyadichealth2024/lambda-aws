service: my-service

provider:
  name: aws
  runtime: python3.9
  region: us-west-2
  stage: dev
  deploymentBucket:
    name: serverless-framework-deployments-us-west-2-25f8a04b-4c16
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:Query
          Resource:
            - arn:aws:dynamodb:us-west-2:982081078723:table/RelationshipFeedback
            - arn:aws:dynamodb:us-west-2:982081078723:table/posturereport
            - arn:aws:dynamodb:us-west-2:982081078723:table/dietreport

        - Effect: Allow
          Action:
            - ses:SendEmail
            - ses:SendRawEmail
          Resource: "*"

  environment:
    DYNAMODB_TABLE_RELATIONSHIP: RelationshipFeedback
    DYNAMODB_TABLE_POSTURE: posturereport
    DYNAMODB_TABLE_DIET: DietFeedback

functions:
  subscribe_user:
    handler: handler.subscribe_user
    memorySize: 1024
    timeout: 30
    events:
      - http:
          path: subscribe
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

  register_user:
    handler: handler.register_user
    memorySize: 1024
    timeout: 30
    events:
      - http:
          path: register
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

  fetch_questions:
    handler: trainques.fetch_questions
    memorySize: 1024
    timeout: 30
    events:
      - http:
          path: questions
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

  getPostureReport:
    handler: posture.lambda_handler
    memorySize: 1024
    timeout: 30
    events:
      - http:
          path: posture/{postureId}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

  getDietReport:
    handler: diet.lambda_handler
    memorySize: 1024
    timeout: 30
    events:
      - http:
          path: diet
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

  # New function to calculate BMI
  calculate_bmi:
    handler: bmi.lambda_handler  # Assuming the Python file for BMI is bmi.py
    memorySize: 1024
    timeout: 30
    events:
      - http:
          path: bmi
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

plugins:
  - serverless-python-requirements
  - serverless-offline
